
import Config.Koneksi;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author NB01
 */
public class FormAnalisis extends javax.swing.JFrame {

    /**
     * Creates new form FormAnalisis
     */
    public FormAnalisis() {
        initComponents();
        tampilHari();
        tampilMinggu();
        tampilBulan();
    }
    
    private void tampilHari() {
        LocalDateTime timeNow = LocalDateTime.now();
        LocalDateTime dateFromLocal = timeNow.minusDays(0);
        LocalDateTime dateToLocal = timeNow;
        String date1 = DateTimeFormatter.ofPattern("yyyy-MM-dd", Locale.ENGLISH).format(dateFromLocal) + " 00:00:00.000";
        String date2 = DateTimeFormatter.ofPattern("yyyy-MM-dd", Locale.ENGLISH).format(dateToLocal) + " 23:59:59.000";
        String query = "select b.kode as kode_barang, b.nama, b.harga, b.kode_supplier as supplier, sum(t.quantity) as jumlah_penjualan from barang b join transaksi t ON b.kode = t.kode_barang where t.tanggal between '" + date1 + "' and '" + date2 + "' group by t.kode_barang order by jumlah_penjualan desc limit 10;";
        DefaultTableModel data = tampilData(query);
        tableHari.setModel(data);
    }
    
     private void tampilMinggu() {
        LocalDateTime timeNow = LocalDateTime.now();
        LocalDateTime dateFromLocal = timeNow.minusDays(7);
        LocalDateTime dateToLocal = timeNow;
        String date1 = DateTimeFormatter.ofPattern("yyyy-MM-dd", Locale.ENGLISH).format(dateFromLocal) + " 00:00:00.000";
        String date2 = DateTimeFormatter.ofPattern("yyyy-MM-dd", Locale.ENGLISH).format(dateToLocal) + " 23:59:59.000";
        String query = "select b.kode as kode_barang, b.nama, b.harga, b.kode_supplier as supplier, sum(t.quantity) as jumlah_penjualan from barang b join transaksi t ON b.kode = t.kode_barang where t.tanggal between '" + date1 + "' and '" + date2 + "' group by t.kode_barang order by jumlah_penjualan desc limit 10;";
        DefaultTableModel data = tampilData(query);
        tableMinggu.setModel(data);
    }
     
      private void tampilBulan() {
        LocalDateTime timeNow = LocalDateTime.now();
        LocalDateTime dateFromLocal = timeNow.minusDays(30);
        LocalDateTime dateToLocal = timeNow;
        String date1 = DateTimeFormatter.ofPattern("yyyy-MM-dd", Locale.ENGLISH).format(dateFromLocal) + " 00:00:00.000";
        String date2 = DateTimeFormatter.ofPattern("yyyy-MM-dd", Locale.ENGLISH).format(dateToLocal) + " 23:59:59.000";
        String query = "select b.kode as kode_barang, b.nama, b.harga, b.kode_supplier as supplier, sum(t.quantity) as jumlah_penjualan from barang b join transaksi t ON b.kode = t.kode_barang where t.tanggal between '" + date1 + "' and '" + date2 + "' group by t.kode_barang order by jumlah_penjualan desc limit 10;";
        DefaultTableModel data = tampilData(query);
        tableBulan.setModel(data);
    }
     
    private  DefaultTableModel tampilData(String query) {
        DefaultTableModel data = tampilHeaderDefault();
          try {
            Statement statement = (Statement) Koneksi.getConnection().createStatement();
            ResultSet res = statement.executeQuery(query);
            while (res.next()) {
                data.addRow(new Object[]{
                    res.getString("kode_barang"),
                    res.getString("nama"),
                    res.getString("harga"),
                    res.getString("supplier"),
                    res.getString("jumlah_penjualan")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal Mengambil Data");
        }
          
          return data;
    }
    
     private DefaultTableModel tampilHeaderDefault() {
        DefaultTableModel data = new DefaultTableModel();
        data.addColumn("Kode Barang");
        data.addColumn("Nama");
        data.addColumn("Harga");
        data.addColumn("Supplier");
        data.addColumn("Jumlah Penjualan");
        
        return data;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHari = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMinggu = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableBulan = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        jLabel1.setText("ANALISIS");

        tableHari.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableHari);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("TOP 10");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Hari Ini");

        tableMinggu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableMinggu);

        tableBulan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tableBulan);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("7 Hari Terakhir");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("30 Hari Terakhir");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(56, 56, 56)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tableBulan;
    private javax.swing.JTable tableHari;
    private javax.swing.JTable tableMinggu;
    // End of variables declaration//GEN-END:variables
}
